// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the computer's memory,
 * including RAM and memory mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: If load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output in the next time step.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:

    DMux(in=load, sel=address[14], a=lMem, b=lScrKbd);
       RAM16K(in=in, load=lMem, address=address[0..13], out=oMem);

       DMux(in=lScrKbd, sel=address[13], a=lScr, b=lKbd);
          DMux(in=lScr, sel=address[12], a=lScr0, b=lScr1);
             RAM4K(in=in, load=lScr0, out=oScr0);
             RAM4K(in=in, load=lScr1, out=oScr1);
          Mux16(a=oScr0, b=oScr1, sel=address[12], out=oScr);
       Register(in=in, load=lKbd, out=oKbd);
       Mux16(a=oScr, b=oKbd, sel=address[13], out=oScrKbd);
    Mux16(a=oMem, b=oScrKbd, sel=address[14], out=out);
}
